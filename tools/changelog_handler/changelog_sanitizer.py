#!/usr/bin/python3

# This script is used to "sanitize" all changelogs generated by the git log command.

import re
import sys

XLET_NAME = sys.argv[1]

# Temporary location of the changelog.
SOURCE_PATH = sys.argv[2]
# Final destination of the changelog.
TARGET_PATH = sys.argv[3]

CHANGELOG_TITLE = """## {xlet_name} changelog

#### This change log is only valid for the version of the xlet hosted on [its original repository](https://github.com/Odyseus/CinnamonTools)

***

""".format(xlet_name=XLET_NAME)

strings = None

try:
    with open(SOURCE_PATH, "r") as log_file_r:
        # The split-join is to somewhat sanitize my first commit messages
        # back when I started the repository.
        # I lazily wrote hundred of commits on one line at the beginning.
        # Re-writing history isn't an option. I already did enough damage doing that. LOL
        strings = "\n- ".join(log_file_r.read().split(". - "))
        # strings = log_file_r.read()

    log_file_r.close()
except Exception as error:
    print(error)
    quit()
finally:
    # Wrap long lines to 100 characters. As long as an horizontal scrollbar
    # doesn't show up on 1024 width resolutions, I'm golden.
    if strings is not None:
        wrapped_strings = ""
        # StackOverflow to the rescue!!! http://stackoverflow.com/a/16430216/4147432
        # strings = "\n".join(line.strip() for line in re.findall(r'.{1,100}(?:\s+|$)', strings))

        # I had to handle each freaking line independently because handling them
        # in bulk completely destroy all new lines.
        for s in strings.splitlines():
            if len(s) < 100:
                wrapped_strings += s + "\n"
            else:
                wrapped_strings += "\n".join(line.strip() for line in re.findall(r".{1,100}(?:\s+|$)", s)) + "\n"

        with open(TARGET_PATH, "w") as log_file_w:
            log_file_w.write(CHANGELOG_TITLE + wrapped_strings)

        log_file_w.close()
